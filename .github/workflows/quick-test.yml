name: Quick Test

on:
  workflow_dispatch:
    inputs:
      namespace:
        description: 'Namespace for testing'
        required: true
        default: 'traffic-capture-quick-test'
        type: string

jobs:
  quick-test:
    name: Quick Traffic Capture Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install tools
      run: |
        # Install kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
        # Install ArgoCD CLI
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd

    - name: Deploy via ArgoCD
      env:
        NAMESPACE: ${{ github.event.inputs.namespace }}
      run: |
        # Login to ArgoCD
        argocd login ${{ secrets.ARGOCD_SERVER }} --auth-token ${{ secrets.ARGOCD_TOKEN }} --grpc-web
        
        # Create application
        argocd app create traffic-capture-$NAMESPACE \
          --repo ${{ github.server_url }}/${{ github.repository }} \
          --revision ${{ github.ref }} \
          --path overlays/dev \
          --dest-server https://kubernetes.default.svc \
          --dest-namespace $NAMESPACE \
          --kustomize-namespace $NAMESPACE \
          --sync-policy automated \
          --sync-option CreateNamespace=true \
          --auto-prune
        
        # Sync and wait
        argocd app sync traffic-capture-$NAMESPACE
        argocd app wait traffic-capture-$NAMESPACE --health --timeout 300

    - name: Run tests
      env:
        NAMESPACE: ${{ github.event.inputs.namespace }}
      run: |
        # Configure kubectl
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > /tmp/kubeconfig
        export KUBECONFIG=/tmp/kubeconfig
        
        # Check namespace
        echo "Checking namespace..."
        kubectl get namespace $NAMESPACE --show-labels
        
        # Check pods
        echo "Checking pods..."
        kubectl get pods -n $NAMESPACE
        
        # Wait for pods
        kubectl wait --for=condition=ready pod --all -n $NAMESPACE --timeout=120s
        
        # Run basic test
        echo "Running basic test..."
        TEST_ID="quick-test-$(date +%s)"
        kubectl exec -n $NAMESPACE deployment/test-client -c client -- \
          curl -s "http://example-app/test/$TEST_ID"
        
        sleep 3
        
        # Check capture
        echo "Checking capture..."
        kubectl exec -n $NAMESPACE deployment/traffic-collector -- \
          wget -qO- http://localhost:9000/query 2>/dev/null | grep -q "$TEST_ID" && \
          echo "✅ Traffic capture working!" || \
          echo "❌ Traffic capture NOT working"
        
        # Get stats
        echo "Collector stats:"
        kubectl exec -n $NAMESPACE deployment/traffic-collector -- \
          wget -qO- http://localhost:9000/stats 2>/dev/null
        
        # Cleanup
        rm -f /tmp/kubeconfig

    - name: Summary
      if: always()
      run: |
        echo "## Quick Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Namespace**: ${{ github.event.inputs.namespace }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Time**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Check the logs above for test results." >> $GITHUB_STEP_SUMMARY